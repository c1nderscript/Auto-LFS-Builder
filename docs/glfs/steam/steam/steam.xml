<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY steam-download-http "https://repo.steampowered.com/steam/archive/precise/steam_&steam-version;.tar.gz">
  <!ENTITY steam-download-ftp  " ">
]>

<sect1 id="steam" xreflabel="Steam-&steam-version;">
  <?dbhtml filename="steam.html"?>

  <title>Steam-&steam-version;</title>

  <indexterm zone="steam">
    <primary sortas="a-steam">steam</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Steam</title>

    <para>
      The <application>Steam</application> package provides a digital software
      delivery system, store, and launcher through VALVE's proprietary runtime.
    </para>

    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&steam-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&steam-download-ftp;"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Steam Dependencies</bridgehead>

    <para>
      <xref linkend="steamdeps"/>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Steam</title>

    <para>
      First enable namespaces in the kernel and recompile if necessary:
    </para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="steam-kernel.xml"/>

    <para>
      Now make a file always exit with exit code 0 as it otherwise does nothing
      on an LFS system besides give a passive error:
    </para>

<screen><userinput>ln -sf /usr/bin/true steamdeps</userinput></screen>

    <para>
      Then install <application>Steam</application> by running
      the following command as the <systemitem class="username">root
      </systemitem> user:
    </para>

<screen role="root"><userinput>make install &amp;&amp;
mv -v /usr/share/doc/steam{,-&steam-version;}</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para>
      <command>ln -sf /usr/bin/true steamdeps</command>: This command
      makes the <filename>steamdeps</filename> <application>Python
      </application> script always exit with code 0 as it uses APT and its
      <application> Python</application> module, which isn't installed in LFS
      and shouldn't be.
    </para>

    <para>
      <command>mv -v /usr/share/doc/steam{,-&steam-version;}</command>: This
      command ensures the doc folder for this package is consistent with the
      other packages.
    </para>

  </sect2>

  <sect2>
    <title>Using Steam</title>

    <para>
      Before executing <command>steam</command>, you need to ensure you:
    </para>

    <itemizedlist>
      <listitem>
        <para>Made the symlink in <xref
        linkend="p11-kit"/></para>
      </listitem>
      <listitem>
        <para>Added the symlink creation instruction in the
        <command>make-ca</command> script as detailed in <xref
        linkend="make-ca"/></para>
      </listitem>
      <listitem>
        <para>Are launching in an X11 instance or have
        <application>Xwayland</application> running in a
        <application>Wayland</application> session</para>
      </listitem>
      <listitem>
        <para>Have a working internet connection</para>
      </listitem>
    </itemizedlist>

    <para>
      After you have made sure of the points above, now you can launch
      <command>steam</command>. This will download the runtime for the
      <application>Steam</application> client. Afterwards, you will be brought
      to the login screen. Make extra sure you have the symlink made in
      <xref linkend="make-ca"/> or you will not be able to get past this point.
      Then, everything should work as normal and you can go ahead and allow
      <application>Proton</application> as you normally would on any given
      Linux distribution.
    </para>

    <para>
      If you find that launching any game doesn't open a window but still shows
      that it is running, there is a good chance that
      <application>Steam</application> made a change that is incompatible with
      your current version of the kernel and you need to upgrade. Even a
      version difference between linux-6.12.3 and linux-6.12.8 can be enough
      for <application>Steam</application> or any of its runtime components
      to refuse opening a window, although this usually doesn't prevent
      <application>Steam</application> itself from launching. Even if you don't
      upgrade this package, components downloaded by this package will get
      updated as time goes on.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Tarballs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          bin_steam.sh, bin_steamdeps.sh, steam (link to bin_steam.sh), and
          steamdeps (link to /usr/bin/true)
        </seg>
        <seg>
          bootstraplinux_ubuntu12_32.tar.xz
        </seg>
        <seg>
          None
        </seg>
        <seg>
          /usr/lib/steam and
          /usr/share/doc/steam-&steam-version;
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bin_steam.sh">
        <term><command>bin_steam.sh</command></term>
        <listitem>
          <para>
            is launcher shell script that unpacks
            <filename>bootstraplinux_ubuntu12_32.tar.xz</filename> and properly
            launches <application>Steam</application>
          </para>
          <indexterm zone="steam bin_steam.sh">
            <primary sortas="b-bin_steam.sh">bin_steam.sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bin_steamdeps.sh">
        <term><command>bin_steamdeps.sh</command></term>
        <listitem>
          <para>
            is a <application>Python</application> script which checks
            for dependencies using APT
          </para>
          <indexterm zone="steam bin_steamdeps.sh">
            <primary sortas="b-bin_steamdeps.sh">bin_steamdeps.sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="steam-bin">
        <term><command>steam</command></term>
        <listitem>
          <para>
            is a symlink to <command>bin_steam.sh</command>
          </para>
          <indexterm zone="steam steam-bin">
            <primary sortas="b-steam-bin">steam</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="steam-steamdeps">
        <term><command>steamdeps</command></term>
        <listitem>
          <para>
            is symlink to <filename>/usr/bin/true</filename>, making the file
            report <computeroutput>true</computeroutput>, or exit code 0 when
            ran
          </para>
          <indexterm zone="steam steam-steamdeps">
            <primary sortas="b-steam-steamdeps">steamdeps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bootstrap-steam">
        <term><filename>bootstraplinux_ubuntu12_32.tar.xz</filename></term>
        <listitem>
          <para>
            is a tarball containing 32-bit software that fetches the
            <application>Steam</application> runtime from VALVE's servers
          </para>
          <indexterm zone="steam bootstrap-steam">
            <primary sortas="b-bootstrap-steam">bootstraplinux_ubuntu12_32.tar.xz</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
