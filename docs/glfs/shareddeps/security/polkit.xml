<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY polkit-download-http "https://github.com/polkit-org/polkit/archive/&polkit-version;/polkit-&polkit-version;.tar.gz">
  <!ENTITY polkit-download-ftp  " ">
]>

<sect1 id="polkit" xreflabel="Polkit-&polkit-version;">
  <?dbhtml filename="polkit.html"?>


  <title>Polkit-&polkit-version;</title>

  <indexterm zone="polkit">
    <primary sortas="a-Polkit">Polkit</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Polkit</title>

    <para>
      <application>Polkit</application> is a toolkit for defining and handling
      authorizations. It is used for allowing unprivileged processes to
      communicate with privileged processes.
    </para>

    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&polkit-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&polkit-download-ftp;"/>
        </para>
      </listitem>
    </itemizedlist>

<!--
    <bridgehead renderas="sect3">Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Required patch:
          <ulink url="&patch-root;/polkit-&polkit-version;-security_fixes-1.patch"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Required patch:
          <ulink url="&patch-root;/polkit-&polkit-version;-js91-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
-->

    <bridgehead renderas="sect3">Polkit Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="duktape"/> and
      <xref linkend="glib2"/>
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend="linux-pam"/><phrase revision="sysv"> and
      <xref linkend="elogind"/></phrase>
    </para>

    <note>
      <para>
        Since <phrase revision="sysv"><command>elogind</command></phrase>
        <phrase revision="systemd"><command>systemd-logind</command></phrase>
        uses PAM to register user sessions, it is a good idea to build
        <application>Polkit</application> with PAM support so
        <phrase revision="sysv"><command>elogind</command></phrase>
        <phrase revision="systemd"><command>systemd-logind</command></phrase>
        can track <application>Polkit</application> sessions.
      </para>
    </note>

    <bridgehead renderas="sect4" revision="systemd">Required Runtime Dependencies</bridgehead>
    <para role="required" revision="systemd">
      <xref role="runtime" linkend="systemd"/>
    </para>

    <bridgehead renderas="sect4" id="polkit-agent" xreflabel="Polkit Authentication Agent">
      Optional Runtime Dependencies
    </bridgehead>
    <para role="optional">
      One polkit authentication agent for using polkit in the graphical
      environment; this will greatly depend on what desktop you are running.
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Polkit</title>

    <para>
      There should be a dedicated user and group to take control
      of the <command>polkitd</command> daemon after it is
      started. <emphasis>IF</emphasis> you have not already created a
      dedicated user and group for <command>polkitd</command>,
      issue the following commands as the
      <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>groupadd -fg 27 polkitd &amp;&amp;
useradd -c "PolicyKit Daemon Owner" -d /etc/polkit-1 -u 27 \
        -g polkitd -s /bin/false polkitd</userinput></screen>

    <para>
      Install <application>Polkit</application> by running the following
      commands:
    </para>

<screen revision="systemd"><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup ..                   \
      --prefix=/usr              \
      --buildtype=release        \
      -D os_type=lfs             \
      -D man=false               \
      -D session_tracking=logind \
      -D tests=false &amp;&amp;

ninja</userinput></screen>

<screen revision="sysv"><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup ..                     \
      --prefix=/usr                \
      --buildtype=release          \
      -D os_type=lfs               \
      -D man=false                 \
      -D session_tracking=elogind  \
      -D systemdsystemunitdir=/tmp \
      -D tests=false &amp;&amp;

ninja</userinput></screen>

    <para>
      Now, as the &root; user:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>

    <para revision="sysv">
      Remove some files that aren't useful on a SysV system as the &root; user:
    </para>

<screen role="root" revision="sysv"><userinput>rm -v /tmp/*.service &amp;&amp;
rm -rf /usr/lib/{sysusers,tmpfiles}.d</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    &options-meson;

    &meson-buildtype-release;

    <para>
      <parameter>-D os_type=lfs</parameter>: This switch ensures that
      even if distribution auto detection fails, the distribution/OS type
      will be hardcoded in <application>Polkit</application>.
    </para>

    <para>
      <parameter>-D man=false</parameter>: This option disables generating and
      installing manual pages.
    </para>

    <para>
      <option>-D authfw=shadow</option>: This switch enables the
      package to use the <application>Shadow</application> rather than the
      <application>Linux PAM</application> Authentication framework. Use it
      if you have not installed <application>Linux PAM</application>.
    </para>

    <para>
      <option>-D introspection=false</option>: This option disables GObject
      Introspection support if you are sure you don't need it.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          pkaction, pkcheck, <!--pk-example-frobnicate,--> pkexec,
          pkttyagent, and polkitd
        </seg>
        <seg>
          libpolkit-agent-1 and
          libpolkit-gobject-1
        </seg>
        <seg>
          /etc/polkit-1,
          /usr/include/polkit-1,
          /usr/lib/polkit-1,
          /usr/share/gtk-doc/html/polkit-1, and
          /usr/share/polkit-1
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="pkaction">
        <term><command>pkaction</command></term>
        <listitem>
          <para>
            is used to obtain information about registered PolicyKit actions
          </para>
          <indexterm zone="polkit pkaction">
            <primary sortas="b-pkaction">pkaction</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pkcheck">
        <term><command>pkcheck</command></term>
        <listitem>
          <para>
            is used to check whether a process is authorized for action
          </para>
          <indexterm zone="polkit pkcheck">
            <primary sortas="b-pkcheck">pkcheck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

<!--
      <varlistentry id="pk-example-frobnicate">
        <term><command>pk-example-frobnicate</command></term>
        <listitem>
          <para>
            is an example program to test the <command>pkexec</command>
            command
          </para>
          <indexterm zone="polkit pk-example-frobnicate">
            <primary sortas="b-pk-example-frobnicate">pk-example-frobnicate</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->

      <varlistentry id="pkexec">
        <term><command>pkexec</command></term>
        <listitem>
          <para>
            allows an authorized user to execute a command as another user
          </para>
          <indexterm zone="polkit pkexec">
            <primary sortas="b-pkexec">pkexec</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pkttyagent">
        <term><command>pkttyagent</command></term>
        <listitem>
          <para>
            is used to start a textual authentication agent for the subject
          </para>
          <indexterm zone="polkit pkttyagent">
            <primary sortas="b-pkttyagent">pkttyagent</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="polkitd">
        <term><command>polkitd</command></term>
        <listitem>
          <para>
            provides the org.freedesktop.PolicyKit1 <application>D-Bus</application>
            service on the system message bus
          </para>
          <indexterm zone="polkit polkitd">
            <primary sortas="b-polkitd">polkitd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpolkit-agent-1">
        <term><filename class="libraryfile">libpolkit-agent-1</filename></term>
        <listitem>
          <para>
            contains the <application>Polkit</application> authentication
            agent API functions
          </para>
          <indexterm zone="polkit libpolkit-agent-1">
            <primary sortas="c-libpolkit-agent-1">libpolkit-agent-1</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpolkit-gobject-1">
        <term><filename class="libraryfile">libpolkit-gobject-1</filename></term>
        <listitem>
          <para>
            contains the <application>Polkit</application> authorization API functions
          </para>
          <indexterm zone="polkit libpolkit-gobject-1">
            <primary sortas="c-libpolkit-gobject-1">libpolkit-gobject-1</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
