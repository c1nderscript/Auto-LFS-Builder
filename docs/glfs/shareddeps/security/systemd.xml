<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!--  <!ENTITY systemd-download-http "https://anduin.linuxfromscratch.org/LFS/systemd-&systemd-version;-&systemd-stable;.tar.xz"> For whenever we move to a stable snapshot for backports -->
  <!ENTITY systemd-download-http "https://github.com/systemd/systemd/archive/v&systemd-version;/systemd-&systemd-version;.tar.gz">
  <!ENTITY systemd-download-ftp  " ">

]>

<sect1 id="systemd" xreflabel="Systemd-&systemd-version;" revision="systemd">
  <?dbhtml filename="systemd.html"?>


  <title>Systemd-&systemd-version;</title>
  <!-- Whenever we switch back to stable backports, make sure to add the systemd-stable reference back. -->

  <indexterm zone="systemd">
    <primary sortas="a-systemd">systemd</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Systemd</title>

    <para>
      While <application>Systemd</application> was installed when
      building LFS, there are many features provided by the package that
      were not included in the initial installation because
      <application>Linux-PAM</application> was not yet installed.
      The <application>Systemd</application> package needs to be
      rebuilt to provide a working <command>systemd-logind</command> service,
      which provides many additional features for dependent packages.
    </para>

    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&systemd-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&systemd-download-ftp;"/>
        </para>
      </listitem>
    </itemizedlist>

<!--  Comment out (instead of remove) in case a patch will be needed.
    <bridgehead renderas="sect3">Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
         Required patch:
         <ulink url="&patch-root;/systemd-&systemd-version;-upstream_fixes-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
-->
    <bridgehead renderas="sect3">Systemd Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="recommended">
      <xref linkend="mesonfiles"/> (for lib32)
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>

    <note>
      <para>
        <xref linkend='linux-pam'/> is not strictly required to build
        <application>Systemd</application>, but the main reason to rebuild
        <application>Systemd</application> in GLFS (it's already built in
        LFS anyway) is for the <command>systemd-logind</command> daemon and
        the
        <filename class='libraryfile'>pam_systemd.so</filename> PAM module.
        <xref linkend='linux-pam'/> is required for them.  All packages in
        GLFS book with a dependency on <application>Systemd</application>
        expect that it has been rebuilt with <xref linkend='linux-pam'/>.
      </para>
    </note>

    <para role="recommended">
      <xref linkend="linux-pam"/> and
      <xref role="runtime" linkend="polkit"/> (runtime)
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Systemd</title>

    <para>
      Remove two unneeded groups,
      <systemitem class="groupname">render</systemitem> and
      <systemitem class="groupname">sgx</systemitem>, from the default udev
      rules:
    </para>

<screen><userinput remap="pre">sed -i -e 's/GROUP="render"/GROUP="video"/' \
       -e 's/GROUP="sgx", //' rules.d/50-udev-default.rules.in</userinput></screen>

    <para>
      Rebuild <application>Systemd</application> by running the
      following commands:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup ..                 \
      --prefix=/usr            \
      --buildtype=release      \
      -D default-dnssec=no     \
      -D firstboot=false       \
      -D install-tests=false   \
      -D ldconfig=false        \
      -D man=auto              \
      -D sysusers=false        \
      -D rpmmacrosdir=no       \
      -D homed=disabled        \
      -D userdb=false          \
      -D mode=release          \
      -D pam=enabled           \
      -D pamconfdir=/etc/pam.d \
      -D dev-kvm-mode=0660     \
      -D nobody-group=nogroup  \
      -D sysupdate=disabled    \
      -D ukify=disabled        \
      -D docdir=/usr/share/doc/systemd-&systemd-version; &amp;&amp;

ninja</userinput></screen>

    <note>
      <para>
        For the best test results, make sure you run the test suite from
        a system that is booted by the same
        <application>Systemd</application> version you are rebuilding.
      </para>
    </note>

    <para>
      To test the results, issue: <command>ninja test</command>.
      The test named <filename>test-stat-util</filename> is known to fail
      if some kernel features are not enabled.
      If the test suite is run as the &root; user, some
      other tests may fail because they depend on various kernel
      configuration options.
    </para>

   <para>
     Now, as the &root; user:
   </para>

<screen role="root"><userinput>ninja install</userinput></screen>

  </sect2>

  <sect2 role="installation">
    <title>lib32 Installation of Systemd</title>

    <para>
      Rebuild lib32-<application>Systemd</application> by running the
      following commands:
    </para>

<screen><userinput>rm -rf * &amp;&amp;
LANG=en_US.UTF-8                  \
meson setup .. --cross-file lib32 \
      --prefix=/usr               \
      --libdir=/usr/lib32         \
      --buildtype=release         \
      -D default-dnssec=no        \
      -D firstboot=false          \
      -D install-tests=false      \
      -D ldconfig=false           \
      -D man=disabled             \
      -D sysusers=false           \
      -D rpmmacrosdir=no          \
      -D homed=disabled           \
      -D userdb=false             \
      -D mode=release             \
      -D pam=enabled              \
      -D pamconfdir=/etc/pam.d &amp;&amp;

LANG=en_US.UTF-8 ninja</userinput></screen>

   <para>
     Now, as the &root; user:
   </para>

<screen role="root"><userinput>LANG=en_US.UTF-8 DESTDIR=$PWD/DESTDIR ninja install          &amp;&amp;
cp -vR DESTDIR/usr/lib32/security       /usr/lib32           &amp;&amp;
cp -va DESTDIR/usr/lib32/libsystemd.so* /usr/lib32           &amp;&amp;
cp -va DESTDIR/usr/lib32/libudev.so*    /usr/lib32           &amp;&amp;
cp -v  DESTDIR/usr/lib32/pkgconfig/*    /usr/lib32/pkgconfig &amp;&amp;
rm -rf DESTDIR</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    &options-meson;

    &meson-buildtype-release;

    <para>
      <parameter>-D pamconfdir=/etc/pam.d</parameter>: Forces the PAM files to
      be installed in /etc/pam.d rather than /usr/lib/pam.d.
    </para>

    <para>
      <parameter>-D userdb=false</parameter>: Removes a daemon that does not
      offer any use under a GLFS configuration.
    </para>

    <para>
      <parameter>-D homed=disabled</parameter>: Removes a daemon that does not
      offer any use under a traditional GLFS configuration, especially using
      accounts created with <command>useradd</command>. The dependencies needed
      won't be installed in this book.
    </para>

    <para>
      <parameter>-D ukify=disabled</parameter>: Removes a script for
      combining a kernel, an initramfs, and a kernel command line etc.
      into an UEFI application which can be loaded by the UEFI firmware
      to start the embedded Linux kernel. It is not needed if you followed
      <ulink url="&blfs-svn;/postlfs/grub-setup.html">BLFS' Grub UEFI
      Setup</ulink>.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuring Systemd</title>

    <para>
      The <filename>/etc/pam.d/system-session</filename> file needs to
      be modified and a new file needs to be created in order for
      <command>systemd-logind</command> to work correctly. Run the following
      commands as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>grep 'pam_systemd' /etc/pam.d/system-session ||
cat &gt;&gt; /etc/pam.d/system-session &lt;&lt; "EOF"
<literal># Begin Systemd addition

session  required    pam_loginuid.so
session  optional    pam_systemd.so

# End Systemd addition</literal>
EOF

cat &gt; /etc/pam.d/systemd-user &lt;&lt; "EOF"
<literal># Begin /etc/pam.d/systemd-user

account  required    pam_access.so
account  include     system-account

session  required    pam_env.so
session  required    pam_limits.so
session  required    pam_loginuid.so
session  optional    pam_keyinit.so force revoke
session  optional    pam_systemd.so

auth     required    pam_deny.so
password required    pam_deny.so

# End /etc/pam.d/systemd-user</literal>
EOF</userinput></screen>

    <!-- For some unknown reason if I don't do this, the per-user systemd
         manager fails to start with "Trying to run as user instance,
         but $XDG_RUNTIME_DIR is not set."  This command is enough to
         fix the issue, and it also seems logical to start using the newly
         rebuilt systemd right away (like "exec bash -&dash;login" in LFS),
         so just add it.  -->
    <para>
      As the &root; user, replace the running <command>systemd</command>
      manager (the <command>init</command> process) with the
      <command>systemd</command> executable newly built and installed:
    </para>

    <screen role='root'><userinput>systemctl daemon-reexec</userinput></screen>

    <important>
      <para>
        Now ensure <xref linkend='shadow'/> has been already rebuilt with
        <xref linkend='linux-pam'/> support first, then logout, and login
        again. This ensures the running login session registered with
        <command>systemd-logind</command> and a per-user Systemd instance
        running for each user owning a login session. Many GLFS packages
        listing Systemd as a dependency need the
        <command>systemd-logind</command> integration and/or a running
        per-user Systemd instance.
      </para>
    </important>

    <warning>
      <para>
        If you are upgrading from a previous version of Systemd and an
        initrd is used for system boot, you should generate a new initrd before
        rebooting the system.
      </para>
    </warning>

  </sect2>

  <sect2 role="content" revision="systemd">
    <title>Contents</title>

      <para>
        A list of the installed files, along with their short
        descriptions can be found at
        <ulink url="&lfs-website;/lfs/view/systemd/chapter08/systemd.html#contents-systemd"/>.
      </para>

      <para>
        Listed below are the newly installed library
        along with a short description.
      </para>

    <segmentedlist>
      <segtitle>Installed Libraries</segtitle>

      <seglistitem>
        <seg>
          pam_systemd
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="pam_systemd">
        <term><filename class="libraryfile">pam_systemd</filename></term>
        <listitem>
          <para>
            is a PAM module used to register user sessions with the
            <application>systemd</application> login manager,
            <command>systemd-logind</command>
          </para>
          <indexterm zone="systemd pam_systemd">
            <primary sortas="c-pam_systemd">pam_systemd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
