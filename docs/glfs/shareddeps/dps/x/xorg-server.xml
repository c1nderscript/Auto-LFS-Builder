<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../../general.ent">
  %general-entities;

  <!ENTITY xorg-server-download-http "&xorg-download-http;/xserver/xorg-server-&xorg-server-version;.tar.xz">
  <!ENTITY xorg-server-download-ftp  " ">
  <!ENTITY modesetting_drv
           "<filename class='libraryfile'>modesetting_drv</filename>">
  <!ENTITY BLFS113 "https://www.linuxfromscratch.org/blfs/view/11.3/x/x7driver.html">
  <!ENTITY BLFS76 "https://www.linuxfromscratch.org/blfs/view/7.6/x/x7driver.html">
]>

<sect1 id="xorg-server" xreflabel="Xorg-Server-&xorg-server-version;">
  <?dbhtml filename="xorg-server.html"?>

  <title>Xorg-Server-&xorg-server-version;</title>

  <indexterm zone="xorg-server">
    <primary sortas="a-xorg-server">xorg-server</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Xorg Server</title>

    <para>
      The <application>Xorg</application> Server is the core
      of the X Window system.
    </para>

    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&xorg-server-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&xorg-server-download-ftp;"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Upstream has added the TearFree option to the default modesetting
          driver (<xref linkend="nvidia"/> is not able to use it). This patch
          adds this feature. Apply this patch if you are going to use Xorg in
          an environment without a compositor (such as TWM, IceWM, Openbox, or
          Fluxbox).
        </para>
        <para>
          Optional patch:
          <ulink url="&dl-root;/xorg-server/xorg-server-tearfree_backport-3.patch"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Xorg Server Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <!-- Not runtime as mesa/nvidia provide DRI needed at configuration. -->
      A userland graphics driver (<xref linkend='mesa'/> and/or
      <xref linkend='nvidia'/>),
      <xref linkend="libxcvt"/>,
      <xref linkend="pixman"/>,
      <xref linkend="xorg7-font"/> (only font-util), and at runtime:
      <xref role="runtime" linkend="xkeyboard-config"/>
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend='dbus'/>,
      <phrase revision="sysv">
      <xref role="runtime" linkend="elogind"/> (runtime;
      <systemitem class='library'>libelogind</systemitem> also referred
      at build time but it's not really useful),</phrase>
      <xref linkend="libepoxy"/> (needed for glamor),
      <phrase revision="systemd"><xref linkend="systemd"/>,</phrase>
      and <xref role='runtime' linkend='xorg-libinput-driver'/> (runtime)
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="libunwind"/>,
      <xref linkend="nettle"/>,
      <xref linkend="xcb-utils"/> (to build Xephyr),
      <xref linkend="xkeyboard-config"/> (for tests),
      <ulink url="https://gitlab.freedesktop.org/xorg/test/rendercheck">rendercheck</ulink> (for tests), and
      <ulink url="https://www.x.org/archive/individual/doc/">xorg-sgml-doctools</ulink> (to build documentation)
    </para>
  </sect2>

  <sect2 role="kernel" id="xorg-server-kernel">
    <title>Kernel Configuration</title>

    <para>
      If your GPU supports 3D acceleration and the userland graphics driver you
      installed can utilize its 3D capability, you should have already enabled
      the necessary kernel configuration options. Otherwise, you need to find
      the kernel configuration option of the DRM driver for the GPU and enable
      it. Notably, the virtual GPUs provided by some virtual machine managers:
    </para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="xorg-server-kernel.xml"/>

    <para>
      If the kernel does not provide a DRM driver for your GPU, on most x86
      systems the <quote>simple frame buffer</quote> DRM driver running on
      VESA or UEFI frame buffer can be used as a fallback.  Enable the
      following options in the kernel configurations if you don't have a
      dedicated DRM driver for the GPU, or you want to keep the simple
      frame buffer driver as a fallback in case the dedicated driver fails:
    </para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="xorg-server-simpledrm-kernel.xml"/>

    <para>
      To allow the kernel to print debug messages at an early boot stage,
      <option>CONFIG_DRM</option> and <option>CONFIG_DRM_SIMPLEDRM</option>
      should not be built as kernel modules unless an initramfs will be
      used.
    </para>

    <para>
      If you want to use the simple frame buffer driver on a system booted
      via BIOS (instead of UEFI), add the following line before the first
      <literal>menuentry</literal> block in the
      <filename>/boot/grub/grub.cfg</filename> file to initialize the VESA
      frame buffer:
    </para>

<screen><literal>set gfxpayload=<replaceable>1024x768x32</replaceable></literal></screen>

    <para>
      You may replace <literal>1024</literal>, <literal>768</literal>, and
      <literal>32</literal> with a resolution and color depth setting
      suitable for your monitor.
    </para>

    <para>
      If all of these DRM drivers do not work for you and you need to use
      a DDX driver with a non-DRM kernel GPU driver (usually named
      <option>CONFIG_FB_*</option> in the kernel configuration, or existing
      as out-tree kernel modules), or you need an device specific
      functionality requiring a DDX driver, consult
      <ulink url="&BLFS113;">an old version of BLFS</ulink>, or
      <ulink url="&BLFS76;">an even older version</ulink> for more DDX
      drivers.
    </para>

    <indexterm zone="xorg-server xorg-server-kernel">
      <primary sortas="d-xorg-server">xorg-server</primary>
    </indexterm>
  </sect2>

  <sect2 role="installation">
    <title>Installation of Xorg Server</title>

    <para>
      First, if you need the TearFree option to work around screen tearing,
      apply the patch:
    </para>

<screen><userinput remap="pre">patch -Np1 -i ../xorg-server-tearfree_backport-3.patch</userinput></screen>

    <para>
      Install the server by running the following commands:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup ..              \
      --prefix=/usr         \
      --localstatedir=/var  \
      -D glamor=true        \
      -D secure-rpc=false   \
      -D xkb_output_dir=/var/lib/xkb &amp;&amp;

ninja</userinput></screen>

    <para>
      To test the results, issue: <command>ninja test</command>. You will need
      to run <command>ldconfig</command> as the &root; user first or some tests
      may fail.
    </para>

    <para>
      Now as the &root; user:
    </para>

<screen role="root"><userinput>ninja install &amp;&amp;
mkdir -pv /etc/X11/xorg.conf.d</userinput><userinput revision="sysv"> &amp;&amp;
install -vdm1777 /tmp/.{ICE,X11}-unix &amp;&amp;
if [ -z "$(grep .ICE-unix /etc/sysconfig/createfiles)" ]; then
cat &gt;&gt; /etc/sysconfig/createfiles &lt;&lt; "EOF"
<literal>/tmp/.ICE-unix dir 1777 root root</literal>
EOF
fi
if [ -z "$(grep .X11-unix /etc/sysconfig/createfiles)" ]; then
cat &gt;&gt; /etc/sysconfig/createfiles &lt;&lt; "EOF"
<literal>/tmp/.X11-unix dir 1777 root root</literal>
EOF
fi</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    &options-meson;

    <para>
      <parameter>-D glamor=true</parameter>: Ensure building the Glamor
      module. It's needed to build the &modesetting_drv; driver
      which replaces the traditional Device Dependent X (DDX) drivers.
    </para>

    <para>
      <parameter>-D secure-rpc=false</parameter>: Disables RPC support
      as <ulink url="&blfs-svn;/basicnet/libtirpc.html">libtirpc</ulink>
      was not built.
    </para>

    <para>
      <option>-D suid_wrapper=true</option>: Builds the suid-root
      wrapper for legacy DDX driver support on rootless xserver systems.
    </para>
<!-- commented out because this option defaults to auto
    <para>
      <option>-Dsystemd_logind=false</option>:
      This switch disables <phrase revision="systemd">systemd-logind</phrase>
      <phrase revision="sysv">elogind</phrase> integration, allowing Xorg Server
      to work without having the <phrase revision="systemd">systemd</phrase>
      <phrase revision="elogind">elogind</phrase> PAM module configured.
    </para>
-->
    <para revision="sysv">
      <command>cat &gt;&gt; /etc/sysconfig/createfiles...</command>: This
      command creates the <filename class="directory">/tmp/.ICE-unix</filename>
      and <filename class="directory">/tmp/.X11-unix</filename> directories at
      startup, and ensures that the permissions and ownership are correct as
      required by the server.
    </para>

    <para>
      <option>-D xephyr=true</option>: This option allows building Xephyr if its
      dependencies are met.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuring Xorg Server</title>

    <para>
      Furthermore, if this package was not built with
      <phrase revision="sysv"><xref linkend="elogind"/> support,</phrase>
      <phrase revision="systemd">
      <xref linkend="systemd"/>,</phrase> add any non-root users to the
      <systemitem class="groupname">input</systemitem> and
      <systemitem class="groupname">video</systemitem> groups as the
      &root; user:  
    </para>

<screen role="root"><userinput>usermod -a -G input,video <replaceable>&lt;username&gt;</replaceable></userinput></screen>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          gtf, X, Xnest, Xorg, Xvfb, and optionally Xephyr
        </seg>
        <seg>
          several under /usr/lib/xorg/modules/ including the
          &modesetting_drv; driver
        </seg>
        <seg>
          /etc/X11/xorg.conf.d,
          /usr/include/xorg,
          /usr/lib/xorg, and
          /usr/share/X11/xorg.conf.d
        </seg>

      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="gtf-x7">
        <term><command>gtf</command></term>
        <listitem>
          <para>
            calculates VESA GTF mode lines
          </para>
          <indexterm zone="xorg-server gtf-x7">
            <primary sortas="b-gtf">gtf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="X-x7">
        <term><command>X</command></term>
        <listitem>
          <para>
            is a symbolic link to Xorg
          </para>
          <indexterm zone="xorg-server X-x7">
            <primary sortas="b-X">X</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="Xephyr-x7">
        <term><command>Xephyr</command></term>
        <listitem>
          <para>
            is a nested X server which supports modern X extensions
          </para>
          <indexterm zone="xorg-server Xephyr-x7">
            <primary sortas="b-Xephyr">Xephyr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="Xnest-x7">
        <term><command>Xnest</command></term>
        <listitem>
          <para>
            is a nested X server
          </para>
          <indexterm zone="xorg-server Xnest-x7">
            <primary sortas="b-Xnest">Xnest</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="Xorg-x7">
        <term><command>Xorg</command></term>
        <listitem>
          <para>
            is the X11R7 X Server
          </para>
          <indexterm zone="xorg-server Xorg-x7">
            <primary sortas="b-Xorg">Xorg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="Xvfb-x7">
        <term><command>Xvfb</command></term>
        <listitem>
          <para>
            is the virtual framebuffer X server for X Version 11
          </para>
          <indexterm zone="xorg-server Xvfb-x7">
            <primary sortas="b-Xvfb">Xvfb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="modesetting_drv-x7">
        <term><filename class="libraryfile">modesetting_drv</filename></term>
        <listitem>
          <para>
            provides a video driver for machines using Kernel Mode Setting (KMS).
            This will use glamor if that has been enabled and the hardware offers
            acceleration
          </para>
          <indexterm zone="xorg-server modesetting_drv-x7">
            <primary sortas="c-modesetting_drv">modesetting_drv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
