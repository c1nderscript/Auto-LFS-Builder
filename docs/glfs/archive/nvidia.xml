<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY nvidia-lib64-download-http "https://us.download.nvidia.com/XFree86/Linux-x86_64/&nvidia-version;/NVIDIA-Linux-x86_64-&nvidia-version;.run">
  <!ENTITY nvidia-lib64-download-ftp  " ">
  <!ENTITY nvidia-lib32-download-http "https://us.download.nvidia.com/XFree86/Linux-x86/390.157/NVIDIA-Linux-x86-390.157.run">
  <!ENTITY nvidia-lib32-download-ftp  " ">
]>


<sect1 id="nvidia" xreflabel="NVIDIA-&nvidia-version;">
  <?dbhtml filename="nvidia.html"?>

  <title>NVIDIA-&nvidia-version;</title>

  <indexterm zone="nvidia">
    <primary sortas="a-nvidia">NVIDIA</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to NVIDIA</title>

    <para>
      The <application>NVIDIA</application> proprietary driver contains
      firmware, kernel drivers, userland drivers pertaining to OpenGL,
      Vulkan, and hardware acceleration, and provides useful utilites.
    </para>

    <note>
      <para>
        The page for this package is not actively maintained as none of the
        GLFS editors use this package, and instead use <xref linkend="mesa"/>.
        It is recommended to use that instead. If you follow this page, you may
        encounter errors. Newer versions of this driver also cause headaches,
        so the future of this driver is unclear. This driver may be archived in
        the future.
      </para>
    </note>

    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Recommended kernel version to use: linux-&nvidia-linux-version;
        </para>
      </listitem>
      <listitem>
        <para>
          x86_64 Download (HTTP): <ulink url="&nvidia-lib64-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          x86_64 Download (FTP): <ulink url="&nvidia-lib64-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          x86 Download (HTTP): <ulink url="&nvidia-lib32-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          x86 Download (FTP): <ulink url="&nvidia-lib32-download-ftp;"/>
        </para>
      </listitem>
    </itemizedlist>

    <note>
      <para>
        If you are doing multilib, install the x86_64 driver as it includes
        32-bit libraries along with the 64-bit libraries.
      </para>
    </note>

    <bridgehead renderas="sect3">NVIDIA Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
        <xref linkend="xorg7-lib"/>
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
        <xref linkend="libglvnd"/>,
        <xref linkend="libvk"/>,
        and <xref linkend="wayland"/>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of NVIDIA</title>

    <note>
      <para>
        Make sure to execute the following command when an <application>Xorg
        </application> instance isn't running, or else the driver will
        complain and quit. Alternatively, you can pass <parameter>
        --allow-installation-with-running-driver --no-x-check</parameter> to
        override NVIDIA's warnings. This is not recommended as it skips
        sanity checks, but is generally safe. If you do this, you should
        reboot afterwards.
      </para>

      <para>
        Along with that, be sure to have the kernel source that you have
        compiled the kernel you are currently using with. Make sure the
        source tree has not been moved, or else you will have to specify
        the kernel source tree directory using <parameter>
        --kernel-source-path=&lt;path&gt;</parameter>. If you don't have
        the source tree on your system, the driver will fail to install.
      </para>

      <para>
        For a complete list of flags, pass <parameter>-A</parameter>.
      </para>
    </note>

    <para>
      First enable XFree86 DRI support in the kernel and recompile if necessary.
    </para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="nvidia-kernel.xml"/>

    <para>
      Install x86_64 <application>NVIDIA</application> by running the following
      commands as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>sh NVIDIA-Linux-x86_64-&nvidia-version;.run \</userinput><userinput revision='sysv'>
  --no-systemd          \</userinput><userinput>
  --no-abi-note         \
  --install-compat32-libs</userinput></screen>

    <para>
      If you are only interested in the 32-bit driver, install x86
      <application>NVIDIA</application> by running the following
      commands as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>sh NVIDIA-Linux-x86-390.157.run</userinput></screen>

    <para>
      And just follow the prompts. It will first ask if you wish to install
      the NVIDIA Proprietary or MIT/GPL kernel modules. If you have the
      NVIDIA Grace Hopper or NVIDIA Blackwell cards, you must choose the
      MIT/GPL option. If you have a Turing, Ampere, Ada Lovelace,
      or Hopper card, it is recommended to now choose the MIT/GPL option.
      If you have a Maxwell, Pascal, or Volta card, choose NVIDIA Proprietary.
      If you are using both an older and newer card, but not the newest cards,
      go with NVIDIA Proprietary.
    </para>

    <note>
      <para>
        If you are having trouble installing the driver, it might be because
        it has issues with the Ncurses library. Pass <parameter>--silent
        </parameter> to the above command for your architecture as it may
        solve the issue. Also pass <parameter>-M &lt;kernel_type&gt;</parameter>
        where <parameter>&lt;kernel_type&gt;</parameter> can be
        <parameter>open</parameter> or <parameter>proprietary</parameter>.
        For the notice above, NVIDIA Proprietary is
        <parameter>proprietary</parameter> and MIT/GPL is
        <parameter>open</parameter>.
      </para>

      <para>
        You may also encounter an error saying the the driver failed to build
        a kernel module. This is usually because the kernel version you are
        using is <quote>too high.</quote> If this happens, it may be necessary
        to downgrade the kernel to a lower version. When a new driver release
        happens, the driver will then most likely support the kernel version at
        the time. At the top of this section, the recommended kernel version
        to use with this driver is mentioned to ensure that a build failure
        does not occur. However, the current kernel version used for kernel
        parameters and such in this book is linux-&linux-version;.
      </para>
    </note>

    <important>
      <para>
        When you update the kernel, you will also need to reinstall the
        <application>NVIDIA</application> driver.
      </para>

      <para>
        This is because there is glue when kernel modules are built. This glue
        doesn't matter too much with first party modules (modules in the kernel
        source tree) as the modules are updated at the same time the kernel is.
        At that point, there is new glue holding them together. However, when
        it comes to third party modules, they aren't updated when the kernel
        updates, so this glue the third party modules had on the kernel breaks.
        This leads to broken kernel modules. This also applies if you stay on
        the same kernel verion but change some options, this can also break
        the glue.
      </para>

      <para>
        Be sure that when you reinstall the driver, make sure you are using
        the new kernel and have the kernel source you built from. Otherwise
        the driver will fail to install.
      </para>
    </important>

    <para>
      Now you can skip most of the packages in this subsection. The ones you
      should install now in this subsection are: <xref linkend="mako"/>,
      <xref linkend="libdrm"/>, <xref linkend="libva"/>,
      <xref linkend="libvdpau"/>, <xref linkend="libvdpau-va-gl"/>,
      <xref linkend="cython"/>, <xref linkend="libyaml"/>,
      <xref linkend="pyyaml"/>, and <xref linkend="mesa"/>. LLVM will not be
      necessary for the rest of the packages in the book, but is recommended
      if you want to use Mesa's Nouveau down the road.
    </para>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para revision="sysv">
      <parameter>--no-systemd</parameter>: This parameter disables Systemd
      support.
    </para>

    <para>
      <parameter>--no-abi-note</parameter>: This parameter removes a mostly
      useless note about a minimum kernel version for NVIDIA OpenGL libraries.
    </para>

    <para>
      <parameter>--install-compat32-libs</parameter>: This option enables the
      installation of 32-bit libraries by default instead of being prompted.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Firmware</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          nvidia-bug-report.sh,
          nvidia-cuda-mps-control,
          nvidia-cuda-mps-server,
          nvidia-debugdump,
          nvidia-installer,
          nvidia-modprobe,
          nvidia-ngx-updater,
          <phrase revision="systemd">
          nvidia-persistenced,
          nvidia-powerd,</phrase>
          nvidia-settings,
          <phrase revision="systemd">
          nvidia-sleep.sh,</phrase>
          nvidia-smi,
          nvidia-uninstall, and
          nvidia-xconfig
        </seg>
        <seg>
          gsp_ga10x.bin and
          gsp_tu10x.bin (firmware is for the x86_64 driver)
        </seg>
        <seg>
          libEGL_nvidia.so,
          libGLESv1_CM_nvidia.so,
          libGLESv2_nvidia.so,
          libGLX_nvidia.so,
          libcuda.so,
          libcudadebugger.so,
          libglxserver_nvidia.so,
          libnvcuvid.so,
          libnvidia-allocator.so,
          libnvidia-api.so,
          libnvidia-cfg.so,
          libnvidia-egl-gbm.so,
          libnvidia-egl-wayland.so,
          libnvidia-eglcore.so,
          libnvidia-encode.so,
          libnvidia-fbc.so,
          libnvidia-glcore.so,
          libnvidia-glsi.so,
          libnvidia-glvkspirv.so,
          libnvidia-gpucomp.so,
          libnvidia-gtk2.so,
          libnvidia-gtk3.so,
          libnvidia-ml.so,
          libnvidia-ngx.so,
          libnvidia-nvvm.so,
          libnvidia-opencl.so,
          libnvidia-opticalflow.so,
          libnvidia-pkcs11-openssl3.so,
          libnvidia-pkcs11.so,
          libnvidia-ptxjitcompiler.so,
          libnvidia-rtcore.so,
          libnvidia-tls.so,
          libnvidia-wayland-client.so,
          libnvoptix.so,
          for <xref linkend="wine"/> (_nvngx.dll and nvngx.dll),
          libvdpau_nvidia.so,
          nvidia-drm_gbm.so, and
          nvidia_drv.so
        </seg>
        <seg>
          /usr/lib/firmware/nvidia,
          /usr/lib/gbm,
          /usr/lib/modprobe.d,
          /usr/lib/modules-load.d,
          /usr/lib/nvidia/wine,
          /usr/lib/nvidia/xorg,
          <phrase revision="systemd">
          /usr/lib/systemd/system-sleep,
          /usr/lib/systemd/system,</phrase>
          /usr/lib/sysusers.d,
          /usr/lib/vdpau,
          /usr/lib/xorg/modules/drivers,
          /usr/share/X11/xorg.conf.d,
          <phrase revision="systemd">
          /usr/share/dbus-1/system.d,</phrase>
          /usr/share/egl/egl_external_platform.d,
          /usr/share/nvidia,
          /etc/share/vulkan/icd.d,
          /etc/share/vulkan/implicit_layer.d, and
          /usr/src/debug/nvidia-utils
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="nvidia-bug-report.sh">
        <term><command>nvidia-bug-report.sh</command></term>
        <listitem>
          <para>
            is the <application>NVIDIA</application> bug reporting shell script.
          </para>
          <indexterm zone="nvidia nvidia-bug-report.sh">
            <primary sortas="b-nvidia-bug-report.sh">nvidia-bug-report.sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-cuda-mps-control">
        <term><command>nvidia-cuda-mps-control</command></term>
        <listitem>
          <para>
            allows multiple CUDA processes to share a single GPU context
          </para>
          <indexterm zone="nvidia nvidia-cuda-mps-control">
            <primary sortas="b-nvidia-cuda-mps-control">nvidia-cuda-mps-control</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-cuda-mps-server">
        <term><command>nvidia-cuda-mps-server</command></term>
        <listitem>
          <para>
            creates the shared GPU context, manages the clients, and issues work
            to the GPU on behalf of the clients
          </para>
          <indexterm zone="nvidia nvidia-cuda-mps-server">
            <primary sortas="b-nvidia-cuda-mps-server">nvidia-cuda-mps-server</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-debugdump">
        <term><command>nvidia-debugdump</command></term>
        <listitem>
          <para>
            collects the internal GPU state
          </para>
          <indexterm zone="nvidia nvidia-debugdump">
            <primary sortas="b-nvidia-debugdump">nvidia-debugdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-installer">
        <term><command>nvidia-installer</command></term>
        <listitem>
          <para>
            installs, upgrades, and uninstalls the <application>NVIDIA
            </application> driver (running the runfile directly is
            recommended)
          </para>
          <indexterm zone="nvidia nvidia-installer">
            <primary sortas="b-nvidia-installer">nvidia-installer</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-modprobe">
        <term><command>nvidia-modprobe</command></term>
        <listitem>
          <para>
            creates Linux device files and loads the <application>NVIDIA
            </application> kernel module
          </para>
          <indexterm zone="nvidia nvidia-modprobe">
            <primary sortas="b-nvidia-modprobe">nvidia-modprobe</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-ngx-updater">
        <term><command>nvidia-ngx-updater</command></term>
        <listitem>
          <para>
            updates NGX features without requiring a full application update
          </para>
          <indexterm zone="nvidia nvidia-ngx-updater">
            <primary sortas="b-nvidia-ngx-updater">nvidia-ngx-updater</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-persistenced" revision="systemd">
        <term><command>nvidia-persistenced</command></term>
        <listitem>
          <para>
            maintains the persistent driver state
          </para>
          <indexterm zone="nvidia nvidia-persistenced">
            <primary sortas="b-nvidia-persistenced">nvidia-persistenced</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-powerd" revision="systemd">
        <term><command>nvidia-powerd</command></term>
        <listitem>
          <para>
            provides support for the <application>NVIDIA</application>
            Dynamic Boost feature
          </para>
          <indexterm zone="nvidia nvidia-powerd">
            <primary sortas="b-nvidia-powerd">nvidia-powerd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-settings">
        <term><command>nvidia-settings</command></term>
        <listitem>
          <para>
            a GUI application relying on <ulink url="&blfs-svn;/x/gtk3.html">GTK-3
            </ulink> that allows tweaking settings like resolution and refresh rate
          </para>
          <indexterm zone="nvidia nvidia-settings">
            <primary sortas="b-nvidia-settings">nvidia-settings</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-sleep.sh" revision="systemd">
        <term><command>nvidia-sleep.sh</command></term>
        <listitem>
          <para>
            interacts with the <filename>
            /proc/driver/nvidia/suspend</filename> interface
          </para>
          <indexterm zone="nvidia nvidia-sleep.sh">
            <primary sortas="b-nvidia-sleep.sh">nvidia-sleep.sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-smi">
        <term><command>nvidia-smi</command></term>
        <listitem>
          <para>
            provides montioring information for Tesla and select Quadro devices
          </para>
          <indexterm zone="nvidia nvidia-smi">
            <primary sortas="b-nvidia-smi">nvidia-smi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-uninstall">
        <term><command>nvidia-uninstall</command></term>
        <listitem>
          <para>
            installs, upgrades, and uninstalls the <application>NVIDIA
            </application> driver (running the runfile directly is
            recommended)
          </para>
          <indexterm zone="nvidia nvidia-uninstall">
            <primary sortas="b-nvidia-uninstall">nvidia-uninstall</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-xconfig">
        <term><command>nvidia-xconfig</command></term>
        <listitem>
          <para>
            manipulates <application>X11</application> configuration files
            to allow the <application>NVIDIA</application> driver to be used
            when starting <application>X11</application>
          </para>
          <indexterm zone="nvidia nvidia-xconfig">
            <primary sortas="b-nvidia-xconfig">nvidia-xconfig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libEGL_nvidia">
        <term><filename class="libraryfile">libEGL_nvidia.so</filename></term>
        <listitem>
          <para>
            provides <application>NVIDIA</application> implementations
            of OpenGL functionality
          </para>
          <indexterm zone="nvidia libEGL_nvidia">
            <primary sortas="c-libEGL_nvidia">libEGL_nvidia.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libGLESv1_CM_nvidia">
        <term><filename class="libraryfile">libGLESv1_CM_nvidia.so</filename></term>
        <listitem>
          <para>
            provides the API entry points for all OpenGL ES and EGL function calls
          </para>
          <indexterm zone="nvidia libGLESv1_CM_nvidia">
            <primary sortas="c-libGLESv1_CM_nvidia">libGLESv1_CM_nvidia.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libGLESv2_nvidia">
        <term><filename class="libraryfile">libGLESv2_nvidia.so</filename></term>
        <listitem>
          <para>
            provides the API entry points for all OpenGL ES and EGL function calls
          </para>
          <indexterm zone="nvidia libGLESv2_nvidia">
            <primary sortas="c-libGLESv2_nvidia">libGLESv2_nvidia.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libGLX_nvidia">
        <term><filename class="libraryfile">libGLX_nvidia.so</filename></term>
        <listitem>
          <para>
            provides <application>NVIDIA</application> implementations
            of OpenGL functionality
          </para>
          <indexterm zone="nvidia libGLX_nvidia">
            <primary sortas="c-libGLX_nvidia">libGLX_nvidia.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcuda">
        <term><filename class="libraryfile">libcuda.so</filename></term>
        <listitem>
          <para>
            provides runtime support for CUDA
          </para>
          <indexterm zone="nvidia libcuda">
            <primary sortas="c-libcuda">libcuda.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcudadebugger">
        <term><filename class="libraryfile">libcudadebugger.so</filename></term>
        <listitem>
          <para>
            provides support for debugging CUDA applications
          </para>
          <indexterm zone="nvidia libcudadebugger">
            <primary sortas="c-libcudadebugger">libcudadebugger.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libglxserver_nvidia">
        <term><filename class="libraryfile">libglxserver_nvidia.so</filename></term>
        <listitem>
          <para>
            is the <application>NVIDIA</application> GLX extension module for
            <application>X11</application>
          </para>
          <indexterm zone="nvidia libglxserver_nvidia">
            <primary sortas="c-libglxserver_nvidia">libglxserver_nvidia.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvcuvid">
        <term><filename class="libraryfile">libnvcuvid.so</filename></term>
        <listitem>
          <para>
            provides an interface to hardware video decoding capabilities
          </para>
          <indexterm zone="nvidia libnvcuvid">
            <primary sortas="c-libnvcuvid">libnvcuvid.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-allocator">
        <term><filename class="libraryfile">libnvidia-allocator.so</filename></term>
        <listitem>
          <para>
            is used internally by other driver components
          </para>
          <indexterm zone="nvidia libnvidia-allocator">
            <primary sortas="c-libnvidia-allocator">libnvidia-allocator.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-api">
        <term><filename class="libraryfile">libnvidia-api.so</filename></term>
        <listitem>
          <para>
            provides an interface for managing properties of GPUs.
          </para>
          <indexterm zone="nvidia libnvidia-api">
            <primary sortas="c-libnvidia-api">libnvidia-api.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-cfg">
        <term><filename class="libraryfile">libnvidia-cfg.so</filename></term>
        <listitem>
          <para>
            is used internally by other driver components
          </para>
          <indexterm zone="nvidia libnvidia-cfg">
            <primary sortas="c-libnvidia-cfg">libnvidia-cfg.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-egl-gbm">
        <term><filename class="libraryfile">libnvidia-egl-gbm.so</filename></term>
        <listitem>
          <para>
            provides GBM EGL application support
          </para>
          <indexterm zone="nvidia libnvidia-egl-gbm">
            <primary sortas="c-libnvidia-egl-gbm">libnvidia-egl-gbm.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-egl-wayland">
        <term><filename class="libraryfile">libnvidia-egl-wayland.so</filename></term>
        <listitem>
          <para>
            provides client-side <application>Wayland</application> EGL
            application support
          </para>
          <indexterm zone="nvidia libnvidia-egl-wayland">
            <primary sortas="c-libnvidia-egl-wayland">libnvidia-egl-wayland.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-eglcore">
        <term><filename class="libraryfile">libnvidia-eglcore.so</filename></term>
        <listitem>
          <para>
            is used internally by other driver components
          </para>
          <indexterm zone="nvidia libnvidia-eglcore">
            <primary sortas="c-libnvidia-eglcore">libnvidia-eglcore.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-encode">
        <term><filename class="libraryfile">libnvidia-encode.so</filename></term>
        <listitem>
          <para>
            provides an interface to video encoder hardware
          </para>
          <indexterm zone="nvidia libnvidia-encode">
            <primary sortas="c-libnvidia-encode">libnvidia-encode.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-fbc">
        <term><filename class="libraryfile">libnvidia-fbc.so</filename></term>
        <listitem>
          <para>
            provides an interface to capture and optionally encode the
            framebuffer of an <application>X11</application> server screen
          </para>
          <indexterm zone="nvidia libnvidia-fbc">
            <primary sortas="c-libnvidia-fbc">libnvidia-fbc.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-glcore">
        <term><filename class="libraryfile">libnvidia-glcore.so</filename></term>
        <listitem>
          <para>
            is used internally by other driver components
          </para>
          <indexterm zone="nvidia libnvidia-glcore">
            <primary sortas="c-libnvidia-glcore">libnvidia-glcore.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-glsi">
        <term><filename class="libraryfile">libnvidia-glsi.so</filename></term>
        <listitem>
          <para>
            is used internally by other driver components
          </para>
          <indexterm zone="nvidia libnvidia-glsi">
            <primary sortas="c-libnvidia-glsi">libnvidia-glsi.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-glvkspirv">
        <term><filename class="libraryfile">libnvidia-glvkspirv.so</filename></term>
        <listitem>
          <para>
            is used internally by other driver components
          </para>
          <indexterm zone="nvidia libnvidia-glvkspirv">
            <primary sortas="c-libnvidia-glvkspirv">libnvidia-glvkspirv.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-gpucomp">
        <term><filename class="libraryfile">libnvidia-gpucomp.so</filename></term>
        <listitem>
          <para>
            is used internally by other driver components
          </para>
          <indexterm zone="nvidia libnvidia-gpucomp">
            <primary sortas="c-libnvidia-gpucomp">libnvidia-gpucomp.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-gtk2">
        <term><filename class="libraryfile">libnvidia-gtk2.so</filename></term>
        <listitem>
          <para>
            provides the <command>nvidia-settings</command> user interface
          </para>
          <indexterm zone="nvidia libnvidia-gtk2">
            <primary sortas="c-libnvidia-gtk2">libnvidia-gtk2.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-gtk3">
        <term><filename class="libraryfile">libnvidia-gtk3.so</filename></term>
        <listitem>
          <para>
            provides the <command>nvidia-settings</command> user interface
          </para>
          <indexterm zone="nvidia libnvidia-gtk3">
            <primary sortas="c-liblnvidia-gtk3">libnvidia-gtk3.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-ml">
        <term><filename class="libraryfile">libnvidia-ml.so</filename></term>
        <listitem>
          <para>
            provides a monitoring and management API
          </para>
          <indexterm zone="nvidia libnvidia-ml">
            <primary sortas="c-libnvidia-ml">libnvidia-ml.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-ngx">
        <term><filename class="libraryfile">libnvidia-ngx.so</filename></term>
        <listitem>
          <para>
            provides functions for AI features
          </para>
          <indexterm zone="nvidia libnvidia-ngx">
            <primary sortas="c-libnvidia-ngx">libnvidia-ngx.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-nvvm">
        <term><filename class="libraryfile">libnvidia-nvvm.so</filename></term>
        <listitem>
          <para>
            provides JIT link-time-optimization for the CUDA driver
          </para>
          <indexterm zone="nvidia libnvidia-nvvm">
            <primary sortas="c-libnvidia-nvvm">libnvidia-nvvm.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-opencl">
        <term><filename class="libraryfile">libnvidia-opencl.so</filename></term>
        <listitem>
          <para>
            provides <application>NVIDIA</application>'s implementation of
            the OpenCL API standard
          </para>
          <indexterm zone="nvidia libnvidia-opencl">
            <primary sortas="c-libnvidia-opencl">libnvidia-opencl.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-opticalflow">
        <term><filename class="libraryfile">libnvidia-opticalflow.so</filename></term>
        <listitem>
          <para>
            can be used for hardware-accelerated computation of optical flow
            vectors and stereo disparity values
          </para>
          <indexterm zone="nvidia libnvidia-opticalflow">
            <primary sortas="c-libnvidia-opticalflow">libnvidia-opticalflow.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-pkcs11-openssl3">
        <term><filename class="libraryfile">libnvidia-pkcs11-openssl3.so</filename></term>
        <listitem>
          <para>
            is a cryptography library wrapper aiming to provide cryptography
            operations when the GPU and driver are operating in Confidential
            Compute mode
          </para>
          <indexterm zone="nvidia libnvidia-pkcs11-openssl3">
            <primary sortas="c-libnvidia-pkcs11-openssl3">libnvidia-pkcs11-openssl3.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-pkcs11">
        <term><filename class="libraryfile">libnvidia-pkcs11.so</filename></term>
        <listitem>
          <para>
            is a cryptography library wrapper aiming to provide cryptography
            operations when the GPU and driver are operating in Confidential
            Compute mode
          </para>
          <indexterm zone="nvidia libnvidia-pkcs11">
            <primary sortas="c-libnvidia-pkcs11">libnvidia-pkcs11.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-ptxjitcompiler">
        <term><filename class="libraryfile">libnvidia-ptxjitcompiler.so</filename></term>
        <listitem>
          <para>
            is a JIT compiler which compiles PTX into GPU machine code and is
            used by the CUDA driver
          </para>
          <indexterm zone="nvidia libnvidia-ptxjitcompiler">
            <primary sortas="c-libnvidia-ptxjitcompiler">libnvidia-ptxjitcompiler.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-rtcore">
        <term><filename class="libraryfile">libnvidia-rtcore.so</filename></term>
        <listitem>
          <para>
            is used internally by other driver components
          </para>
          <indexterm zone="nvidia libnvidia-rtcore">
            <primary sortas="c-libnvidia-rtcore">libnvidia-rtcore.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-tls">
        <term><filename class="libraryfile">libnvidia-tls.so</filename></term>
        <listitem>
          <para>
            provides thread local storage support for the <application>NVIDIA
            </application> OpenGL libraries
          </para>
          <indexterm zone="nvidia libnvidia-tls">
            <primary sortas="c-libnvidia-tls">libnvidia-tls.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvidia-wayland-client">
        <term><filename class="libraryfile">libnvidia-wayland-client.so</filename></term>
        <listitem>
          <para>
            is required for <command>nvidia-settings</command> on
            <application>Wayland</application>
          </para>
          <indexterm zone="nvidia libnvidia-wayland-client">
            <primary sortas="c-libnvidia-wayland-client">libnvidia-wayland-client.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnvoptix">
        <term><filename class="libraryfile">libnvoptix.so</filename></term>
        <listitem>
          <para>
            implements the OptiX ray tracing engine
          </para>
          <indexterm zone="nvidia libnvoptix">
            <primary sortas="c-libnvoptix">libnvoptix.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libvdpau_nvidia">
        <term><filename class="libraryfile">libvdpau_nvidia.so</filename></term>
        <listitem>
          <para>
            provides the <application>NVIDIA</application> implementation for
            the VDPAU library
          </para>
          <indexterm zone="nvidia libvdpau_nvidia">
            <primary sortas="c-libvdpau_nvidia">libvdpau_nvidia.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="_nvngx">
        <term><filename class="libraryfile">_nvngx.dll</filename></term>
        <listitem>
          <para>
            provides DLSS support for use with <application>Wine</application>
          </para>
          <indexterm zone="nvidia _nvngx">
            <primary sortas="c-_nvngx">_nvngx.dll</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvngx">
        <term><filename class="libraryfile">nvngx.dll</filename></term>
        <listitem>
          <para>
            provides DLSS support for use with Proton
          </para>
          <indexterm zone="nvidia nvngx">
            <primary sortas="c-nvngx">nvngx.dll</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-drm_gbm">
        <term><filename class="libraryfile">nvidia-drm_gbm.so</filename></term>
        <listitem>
          <para>
            is the <application>NVIDIA</application> implementation of GBM
          </para>
          <indexterm zone="nvidia nvidia-drm_gbm">
            <primary sortas="c-nvidia-drm_gbm">nvidia-drm_gbm.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia_drv">
        <term><filename class="libraryfile">nvidia_drv.so</filename></term>
        <listitem>
          <para>
            is the <application>NVIDIA</application> <application>X11
            </application> driver
          </para>
          <indexterm zone="nvidia nvidia_drv">
            <primary sortas="c-nvidia_drv">nvidia_drv.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
