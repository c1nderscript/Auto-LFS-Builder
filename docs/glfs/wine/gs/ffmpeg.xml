<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY ffmpeg-download-http "https://ffmpeg.org/releases/ffmpeg-&ffmpeg-version;.tar.xz">
  <!ENTITY ffmpeg-download-ftp  " ">
]>

<sect1 id="ffmpeg" xreflabel="FFmpeg-&ffmpeg-version;">
  <?dbhtml filename="ffmpeg.html"?>


  <title>FFmpeg-&ffmpeg-version;</title>

  <indexterm zone="ffmpeg">
    <primary sortas="a-FFmpeg">FFmpeg</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to FFmpeg</title>

    <para>
      <application>FFmpeg</application> is a solution to record, convert and
      stream audio and video. It is a very fast video and audio converter and it
      can also acquire from a live audio/video source. Designed to be intuitive,
      the command-line interface (<command>ffmpeg</command>) tries to figure out
      all the parameters, when possible. <application>FFmpeg</application> can
      also convert from any sample rate to any other, and resize video on the
      fly with a high quality polyphase filter.
      <application>FFmpeg</application> can use a Video4Linux compatible video
      source and any Open Sound System audio source.
    </para>

    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&ffmpeg-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&ffmpeg-download-ftp;"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Required patch:
          <ulink url="&dl-root;/ffmpeg/ffmpeg-&ffmpeg-version;-chromium_method-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">FFmpeg Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="pkgconf"/> (for lib32)
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend="libaom"/>,
      <ulink url="&blfs-svn;/multimedia/libass.html">libass</ulink>,
      <xref linkend="fdk-aac"/>,
      <xref linkend="freetype2-pass2"/>,
      <xref linkend="lame"/>,
      <xref linkend="libvorbis"/>,
      <xref linkend="libvpx"/>,
      <xref linkend="opus"/>,
      <xref linkend="x264"/>,
      <xref linkend="x265"/>, and
      <xref linkend="nasm"/>
    </para>

    <bridgehead renderas="sect4">Recommended for desktop use</bridgehead>
    <para role="recommended">
      <xref linkend="alsa-lib"/>,
      <xref linkend="libva"/>, and
      <xref linkend="sdl2"/>
    </para>

    <bridgehead renderas="sect4">Recommended for systems with Intel Video</bridgehead>
    <para role="recommended">
      <xref linkend="libvdpau"/> and
      <xref linkend="libvdpau-va-gl"/>
    </para>

    <bridgehead renderas="sect4">Optional for systems with NVIDIA</bridgehead>
    <para role="optional">
      <ulink url="&slfs-website;/general/cuda.html">CUDA</ulink> and
      <ulink url="&slfs-website;/general/nv-codec-headers.html">nv-codec-headers</ulink>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      Full list of optional dependencies are in the
      <ulink url="&blfs-svn;/multimedia/ffmpeg.html">BLFS FFmpeg page</ulink>.
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of FFmpeg</title>

    <para>
      First, apply a patch that adds an API necessary for some packages to
      build:
      <!-- qtwebengine -->
    </para>

<screen><userinput remap="pre">patch -Np1 -i ../ffmpeg-&ffmpeg-version;-chromium_method-1.patch</userinput></screen>

    <para>
      Now fix an issue caused by the latest version of <xref linkend="x265"/>:
    </para>

<screen><userinput remap="pre">sed -e 's/X265_BUILD >= 210/(&amp;) \&amp;\&amp; (X265_BUILD &lt; 213)/' \
    -i libavcodec/libx265.c</userinput></screen>

    <para>
      Install <application>FFmpeg</application> by running the following
      commands:
    </para>

<screen><userinput>./configure --prefix=/usr        \
            --enable-gpl         \
            --enable-version3    \
            --enable-nonfree     \
            --disable-static     \
            --enable-shared      \
            --disable-debug      \
            --enable-libaom      \
            --enable-libfdk-aac  \
            --enable-libfreetype \
            --enable-libmp3lame  \
            --enable-libopus     \
            --enable-libvorbis   \
            --enable-libvpx      \
            --enable-libx264     \
            --enable-libx265     \
            --enable-openssl     \
            --ignore-tests=enhanced-flv-av1 \
            --docdir=/usr/share/doc/ffmpeg-&ffmpeg-version; &amp;&amp;

make &amp;&amp;

gcc tools/qt-faststart.c -o tools/qt-faststart</userinput></screen>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make install &amp;&amp;

install -v -m755    tools/qt-faststart /usr/bin &amp;&amp;
install -v -m755 -d           /usr/share/doc/ffmpeg-&ffmpeg-version; &amp;&amp;
install -v -m644    doc/*.txt /usr/share/doc/ffmpeg-&ffmpeg-version;</userinput></screen>

  </sect2>

  <sect2 role="installation">
    <title>lib32 Installation of FFmpeg</title>

    <para>
      Install lib32-<application>FFmpeg</application> by running the following
      commands:
    </para>

<screen><userinput>make distclean &amp;&amp;
./configure --prefix=/usr                             \
            --libdir=/usr/lib32                       \
            --shlibdir=/usr/lib32                     \
            --cc="gcc -m32"                           \
            --pkg-config=i686-pc-linux-gnu-pkg-config \
            --enable-gpl                              \
            --enable-version3                         \
            --enable-nonfree                          \
            --disable-static                          \
            --enable-shared                           \
            --disable-debug                           \
            --enable-libaom                           \
            --enable-libfdk-aac                       \
            --enable-libfreetype                      \
            --enable-libmp3lame                       \
            --enable-libopus                          \
            --enable-libvorbis                        \
            --enable-libvpx                           \
            --enable-libx264                          \
            --enable-libx265                          \
            --enable-openssl                          \
            --ignore-tests=enhanced-flv-av1 &amp;&amp;

make</userinput></screen>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make DESTDIR=$PWD/DESTDIR install     &amp;&amp;
cp -vr DESTDIR/usr/lib32/* /usr/lib32 &amp;&amp;
rm -rf DESTDIR                        &amp;&amp;
ldconfig</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    &options-configure;

    <para>
      <parameter>--enable-libfreetype</parameter>: Enables
      <application>Freetype</application> support.
    </para>

    <para>
      <parameter>--enable-gpl</parameter>: Enables the use of GPL code and
      permits support for postprocessing, swscale and many other features.
    </para>

    <para>
      <parameter>--enable-version3</parameter>: Enables the use of (L)GPL
      version 3 code.
    </para>

    <para>
      <parameter>--enable-nonfree</parameter>: Enables the use of nonfree code.
      Note that the resulting libraries and binaries will be unredistributable.
    </para>

    &static-libraries;

    <para>
      <parameter>--enable-shared</parameter>: Enables building shared
      libraries, otherwise only static libraries are built and installed.
    </para>

    <para>
      <parameter>--disable-debug</parameter>: Disables building debugging
      symbols into the programs and libraries.
    </para>

    <para>
      <parameter>--enable-libaom</parameter>: Enables AV1 audio and video
      decoding via <filename class="libraryfile">libaom</filename>.
    </para>

    <para>
      <parameter>--enable-libfdk-aac</parameter>: Enables AAC audio encoding via
      <filename class="libraryfile">libfdk-aac</filename>.
    </para>

    <para>
      <parameter>--enable-libmp3lame</parameter>: Enables MP3 audio encoding
      via <filename class="libraryfile">libmp3lame</filename>.
    </para>
<!--
    <para>
      <parameter>- -enable-libvorbis</parameter>
      <parameter>- -enable-libtheora</parameter>: Enables
      Theora video encoding via <filename
      class="libraryfile">libvorbis</filename> and <filename
      class="libraryfile">libtheora</filename>.
    </para>
-->
    <para>
      <parameter>--enable-libvorbis</parameter>
      <parameter>--enable-libvpx</parameter>: Enables WebM
      encoding via <filename class="libraryfile">libvorbis</filename> and
      <filename class="libraryfile">libvpx</filename>.
    </para>

    <para>
      <parameter>--enable-libx264</parameter>: Enables high-quality
      H.264/MPEG-4 AVC encoding via <filename
      class="libraryfile">libx264</filename>.
    </para>

    <para>
      <parameter>--enable-libx265</parameter>: Enables high-quality
      H.265/HEVC encoding via <filename
      class="libraryfile">libx265</filename>.
    </para>

    <para>
      <parameter>--enable-openssl</parameter>:
      Enables HTTPS protocol for network streams.
    </para>

    <para>
      <option>--enable-libdrm</option>: Use this switch if
      <xref linkend="libdrm"/> is installed to build the <quote>kmsgrab</quote>
      input module which is useful for screen capturing or streaming.
    </para>

    <para>
      <option>--enable-nvenc --enable-nvdec</option>: These options enable
      hardware acceleration for NVIDIA GPUs, and depend on the optional
      dependencies for systems with NVIDIA.
    </para>

    <!--
    <para>
      <parameter>- -disable-vulkan</parameter>: Disables Vulkan for the
      current version of <xref linkend="vulkan-loader"/> due to
      an API conflict.
    </para>
    -->

    <para>
      <parameter>--ignore-tests=...</parameter>: Disables tests that fail to
      run on
      BLFS without the optional packages. Currently the AV1 test is disabled 
      as it needs dav1d to do AV1 decoding on the CPU. The test might work if 
      you have a GPU that can decode AV1, but this was not tested.
    </para>

    <para>
      <option>--enable-gnutls</option>: Use this option instead of
      <parameter>--enable-openssl</parameter>, if you want to use
      <application>GnuTLS</application> instead of
      <application>OpenSSL</application> for HTTPS protocol.
    </para>

    <para>
      <option>--disable-doc</option>: Disables building html documentation.
      This is only needed if doxygen is installed and you
      do not want to build the html documentation.
    </para>

    <para>
      <option>--enable-libpulse</option>: Enables support for
      <application>Pulseaudio</application> for audio output.
    </para>

    <para>
      <command>gcc tools/qt-faststart.c -o tools/qt-faststart</command>: This
      builds the <command>qt-faststart</command> program which can modify
      QuickTime formatted movies (<filename class="extension">.mov</filename>
      or <filename class="extension">.mp4</filename>) so that the header
      information is located at the beginning of the file instead of the end.
      This allows the movie file to begin playing before the entire file has
      been downloaded.
    </para>

    <note>
      <para>
        Support for some of the dependency packages requires using options
        passed to the <command>configure</command> script. View the output
        from <command>./configure --help</command> for complete information
        about enabling dependency packages.
      </para>
    </note>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          ffmpeg, ffplay, ffprobe, <!--ffserver,--> and qt-faststart
        </seg>
        <seg>
          libavcodec, libavdevice, libavfilter,
          libavformat, libavutil, libpostproc,
          libswresample, and libswscale
        </seg>
        <seg>
          /usr/include/libav{codec,device,filter,format,util},
          /usr/include/libpostproc,
          /usr/include/libsw{resample,scale},
          /usr/share/doc/ffmpeg-&ffmpeg-version;, and
          /usr/share/ffmpeg
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="ffmpeg-prog">
        <term><command>ffmpeg</command></term>
        <listitem>
          <para>
            is a command-line tool to convert video files, network streams and
            input from a TV card to several video formats
          </para>
          <indexterm zone="ffmpeg ffmpeg-prog">
            <primary sortas="b-ffmpeg">ffmpeg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ffplay">
        <term><command>ffplay</command></term>
        <listitem>
          <para>
            is a very simple and portable media player using the
            <filename>ffmpeg</filename> libraries and the SDL library
          </para>
          <indexterm zone="ffmpeg ffplay">
            <primary sortas="b-ffplay">ffplay</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ffprobe">
        <term><command>ffprobe</command></term>
        <listitem>
          <para>
            gathers information from multimedia streams and prints it in a human
            and machine-readable fashion
          </para>
          <indexterm zone="ffmpeg ffprobe">
            <primary sortas="b-ffprobe">ffprobe</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="qt-faststart">
        <term><command>qt-faststart</command></term>
        <listitem>
          <para>
            moves the index file to the front of quicktime (mov/mp4) videos
          </para>
          <indexterm zone="ffmpeg qt-faststart">
            <primary sortas="b-qt-faststart">qt-faststart</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libavcodec">
        <term><filename class="libraryfile">libavcodec</filename></term>
        <listitem>
          <para>
            is a library containing the <application>FFmpeg</application> codecs
            (both encoding and decoding)
          </para>
          <indexterm zone="ffmpeg libavcodec">
            <primary sortas="c-libavcodec">libavcodec</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libavdevice">
        <term><filename class="libraryfile">libavdevice</filename></term>
        <listitem>
          <para>
            is the <application>FFmpeg</application> device handling library
          </para>
          <indexterm zone="ffmpeg libavdevice">
            <primary sortas="c-libavdevice">libavdevice</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libavfilter">
        <term><filename class="libraryfile">libavfilter</filename></term>
        <listitem>
          <para>
            is a library of filters that can alter video or audio between the
            decoder and the encoder (or output)
          </para>
          <indexterm zone="ffmpeg libavfilter">
            <primary sortas="c-libavfilter">libavfilter</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libavformat">
        <term><filename class="libraryfile">libavformat</filename></term>
        <listitem>
          <para>
            is a library containing the file formats handling (mux and demux
            code for several formats) used by <command>ffplay</command> as well
            as allowing the generation of  audio or video streams
          </para>
          <indexterm zone="ffmpeg libavformat">
            <primary sortas="c-libavformat">libavformat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libavresample">
        <term><filename class="libraryfile">libavresample</filename></term>
        <listitem>
          <para>
            is a library containing functions for resampling audio and video.
          </para>
          <indexterm zone="ffmpeg libavresample">
            <primary sortas="c-libavresample">libavresample</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libavutil">
        <term><filename class="libraryfile">libavutil</filename></term>
        <listitem>
          <para>
            is the <application>FFmpeg</application> utility library
          </para>
          <indexterm zone="ffmpeg libavutil">
            <primary sortas="c-libavutil">libavutil</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpostproc">
        <term><filename class="libraryfile">libpostproc</filename></term>
        <listitem>
          <para>
            is the <application>FFmpeg</application> post processing library
          </para>
          <indexterm zone="ffmpeg libpostproc">
            <primary sortas="c-libpostproc">libpostproc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libswresample">
        <term><filename class="libraryfile">libswresample</filename></term>
        <listitem>
          <para>
            is the <application>FFmpeg</application> audio rescaling library,
            it contains functions for converting audio sample formats
          </para>
          <indexterm zone="ffmpeg libswresample">
            <primary sortas="c-libswresample">libswresample</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libswscale">
        <term><filename class="libraryfile">libswscale</filename></term>
        <listitem>
          <para>
            is the <application>FFmpeg</application> image rescaling library
          </para>
          <indexterm zone="ffmpeg libswscale">
            <primary sortas="c-libswscale">libswscale</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
