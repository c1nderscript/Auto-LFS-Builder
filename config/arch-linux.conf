# Arch Linux Configuration Template for Auto-LFS-Builder
# This file contains Arch Linux specific settings and optimizations

# System Detection
DISTRIBUTION="arch"
DISTRIBUTION_VERSION="rolling"
PACKAGE_MANAGER="pacman"

# Arch Linux Package Mappings
# Map common package names to Arch equivalents
PACKAGE_MAP=(
    ["build-essential"]="base-devel"
    ["python3"]="python"
    ["python3-dev"]="python"
    ["python3-pip"]="python-pip"
    ["libc6-dev"]="glibc"
    ["linux-headers"]="linux-headers"
    ["pkg-config"]="pkg-config"
    ["libtool-bin"]="libtool"
    ["zlib1g-dev"]="zlib"
    ["libncurses5-dev"]="ncurses"
    ["libreadline-dev"]="readline"
    ["libssl-dev"]="openssl"
    ["libffi-dev"]="libffi"
    ["libbz2-dev"]="bzip2"
    ["liblzma-dev"]="xz"
    ["libxml2-dev"]="libxml2"
    ["libxslt1-dev"]="libxslt"
    ["libgdbm-dev"]="gdbm"
    ["uuid-dev"]="util-linux"
    ["libsqlite3-dev"]="sqlite"
    ["libexpat1-dev"]="expat"
)

# Arch Linux Compiler Flags
# These are read from /etc/makepkg.conf but can be overridden
CFLAGS_ARCH="-march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions"
CXXFLAGS_ARCH="$CFLAGS_ARCH -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security"
LDFLAGS_ARCH="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now"

# Build Performance Settings
PARALLEL_JOBS_ARCH="$(nproc)"
CCACHE_SIZE_ARCH="5G"
USE_TMPFS_ARCH="true"
TMPFS_SIZE_ARCH="4G"

# Arch Linux Specific Paths
ARCH_MAKEPKG_CONF="/etc/makepkg.conf"
ARCH_PACMAN_CONF="/etc/pacman.conf"
ARCH_CCACHE_DIR="${HOME}/.ccache"
ARCH_BUILD_DIR="/tmp/lfs-build"

# Required Packages for LFS on Arch
REQUIRED_PACKAGES_ARCH=(
    "base-devel"
    "git"
    "wget"
    "curl"
    "gawk"
    "m4"
    "texinfo"
    "bison"
    "flex"
    "bc"
    "cpio"
    "dosfstools"
    "parted"
    "rsync"
    "unzip"
    "which"
    "pkg-config"
    "autoconf"
    "automake"
    "libtool"
    "patch"
    "python"
    "python-pip"
)

# Optional Performance Packages
OPTIONAL_PACKAGES_ARCH=(
    "ccache"
    "distcc"
    "ninja"
    "cmake"
    "meson"
    "llvm"
    "clang"
    "lld"
)

# LFS Specific Packages
LFS_PACKAGES_ARCH=(
    "qemu-system-x86_64"
    "arch-install-scripts"
    "xorriso"
    "libisoburn"
    "squashfs-tools"
    "mtools"
    "syslinux"
)

# Validation Settings
MIN_GLIBC_VERSION="2.31"
MIN_GCC_VERSION="9.0"
MIN_KERNEL_VERSION="5.4"
MIN_DISK_SPACE_GB="50"
RECOMMENDED_RAM_MB="4096"

# Arch Linux Optimization Features
ENABLE_CCACHE="true"
ENABLE_LTO="false"  # Enable only if you know what you're doing
ENABLE_TMPFS="auto"  # auto, true, false
ENABLE_MULTILIB="detect"  # detect, true, false

# AUR Integration
AUR_HELPER_PREFERENCE=("yay" "paru" "trizen")
AUTO_INSTALL_AUR_HELPER="true"

# Build Environment
BUILD_ISOLATION="false"  # Use systemd-nspawn for isolation
BUILD_CHROOT="false"     # Use chroot for building

# Logging
ARCH_LOG_LEVEL="INFO"
ARCH_LOG_FILE="arch-lfs-build.log"

# Export all variables
for var in $(compgen -A variable | grep -E '^(CFLAGS|CXXFLAGS|LDFLAGS|PARALLEL_JOBS|CCACHE|TMPFS|ARCH_|REQUIRED_|OPTIONAL_|LFS_|MIN_|RECOMMENDED_|ENABLE_|AUR_|BUILD_)'); do
    export $var
done
